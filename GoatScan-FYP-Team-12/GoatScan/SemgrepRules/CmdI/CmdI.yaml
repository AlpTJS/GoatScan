rules:
  - id: tainted-command-injection
    message: An attacker can execute arbitrary commands, potentially gaining complete
      control of the system. To prevent this vulnerability, avoid executing OS
      commands with user input. If this is unavoidable, validate and sanitize
      the user input, and use safe methods for executing the commands. In PHP,
      it is possible to use `escapeshellcmd(...)` and `escapeshellarg(...)` to
      correctly sanitize input that is used respectively as system commands or
      command arguments.
    severity: ERROR
    metadata:
      likelihood: HIGH
      impact: HIGH
      confidence: MEDIUM
      category: security
      subcategory:
        - vuln
      cwe:
        - "CWE-78: Improper Neutralization of Special Elements used in an OS
          Command ('OS Command Injection')"
      cwe2021-top25: true
      cwe2022-top25: true
      owasp:
        - A01:2017 - Injection
        - A03:2021 - Injection
      references:
        - https://www.php.net/manual/en/function.eval
        - https://github.com/FloeDesignTechnologies/phpcs-security-audit/blob/master/Security/Sniffs/BadFunctions/NoEvalsSniff.php
      technology:
        - php
      license: proprietary license - copyright Â© r2c
      vulnerability_class:
        - Command Injection
    languages:
      - php
    mode: taint
    pattern-sources:
      #User-Input
      - pattern: $_GET
      - pattern: $_POST
      - pattern: $_FILES   
      - pattern: $_COOKIE
      - pattern: $_REQUEST    #Contain $_GET, $_COOKIE arrays
      - pattern: get_headers(...)
      - pattern: getallheaders(...)
      - pattern: get_browser(...)
      - pattern: gethostbyaddr(...)
      - pattern: $_SERVER   # Contain client's req (headers)
    pattern-sanitizers:
      - pattern: escapeshellarg(...)
      - pattern: escapeshellcmd(...)

    pattern-sinks:
      - patterns:
          - pattern-either:
              - pattern: exec(...)
              - pattern: system(...)
              - pattern: passthru(...)
              - pattern: shell_exec(...)
              - pattern: |
                  `...`
              - patterns:
                  - focus-metavariable: $COMMAND
                  - pattern: proc_open($COMMAND, ...)
              - patterns:
                  - focus-metavariable: $COMMAND
                  - pattern: popen($COMMAND, ...)
              - pattern: pcntl_exec(...)
